# Test using the corpus as unit tests (deterministically, without generating new fuzz-based inputs).
# Note that we don't install go-fuzz.

# TODO: test multiple packages at once. (Probably should push a couple more example fuzz functions).

# Side note: can run this by itself with:
#     go test -run=TestScript/verify_corpus
# (permuatations like -run=TestScript/corpus or -run=TestScript/.*corpus.* should also work)

# Explicitly set GO111MODULE off for now. (testscripts seemingly by design do not pick up this value from actual env).
env GO111MODULE=off

# Download the FuzzTime example from the fzgo repo
go get -v -u github.com/thepudds/fzgo/examples/...

# Verify the corpus for FuzzTime. This automatically also passes through to
# the normal 'go test', which causes it to report 'no test files'
fzgo test github.com/thepudds/fzgo/examples/time
exists $WORK/gopath/src/github.com/thepudds/fzgo/examples/time/testdata/fuzz/FuzzTime
stdout '^ok .*fzgo-verify-corpus'
stdout 'github.com/thepudds/fzgo/examples/time.*\[no test files\]'

# Verify we can use -run flag to select a specific file from the corpus.
# The time corpus has a file 'valid-input'.
fzgo test -v -run=TestCorpus/valid-input github.com/thepudds/fzgo/examples/time
stdout '=== RUN   TestCorpus/valid-input'
stdout '--- PASS: TestCorpus/valid-input'
stdout '^ok .*fzgo-verify-corpus'
stdout 'github.com/thepudds/fzgo/examples/time.*\[no test files\]'

# Verify a package without a corpus is handled gracefully.
fzgo test github.com/thepudds/fzgo/examples/empty
! stdout 'fzgo-verify-corpus'
stdout 'github.com/thepudds/fzgo/examples/empty.*\[no test files\]'
